diff -Naur c9upstream/configs/ide/default.js c9fork/configs/ide/default.js
--- c9upstream/configs/ide/default.js	2017-04-11 09:20:53.717533635 +0200
+++ c9fork/configs/ide/default.js	2017-04-11 10:38:08.694475194 +0200
@@ -665,6 +665,7 @@
         // Formatters
         "plugins/c9.ide.format/format",
         "plugins/c9.ide.format/formatters/jsbeautify",
+        "plugins/c9.ide.format/formatters/astyle",
         
         // Other
         "plugins/c9.ide.download/download",
diff -Naur c9upstream/plugins/c9.ide.format/formatters/astyle.js c9fork/plugins/c9.ide.format/formatters/astyle.js
--- c9upstream/plugins/c9.ide.format/formatters/astyle.js	1970-01-01 01:00:00.000000000 +0100
+++ c9fork/plugins/c9.ide.format/formatters/astyle.js	2017-04-11 10:37:02.818337074 +0200
@@ -0,0 +1,204 @@
+define(function(require, exports, module) {
+    main.consumes = [
+        "Plugin", "format", "settings", "preferences", "util", "dialog.error"
+    ];
+    main.provides = ["format.astyle"];
+    return main;
+
+    function main(options, imports, register) {
+        var util = imports.util;
+        var prefs = imports.preferences;
+        var Plugin = imports.Plugin;
+        var format = imports.format;
+        var settings = imports.settings;
+        var showError = imports["dialog.error"].show;
+       
+        var Range = require("ace/range").Range;
+        
+        /***** Initialization *****/
+        
+        var plugin = new Plugin("Ajax.org", main.consumes);
+        // var emit = plugin.getEmitter();
+        
+        var MODES = {
+            "c_cpp"      : "C C++ (astyle)",
+            "java"       : "Java (astyle)",
+            "cs"         : "C# (astyle)",
+        };
+        
+        var loaded = false;
+        function load() {
+            if (loaded) return false;
+            loaded = true;
+            
+            Object.keys(MODES).forEach(function(name) {
+                format.addFormatter(MODES[name], name, plugin);
+            });
+            
+            settings.on("read", function(){
+                settings.setDefaults("user/format/astyle", [
+                    ["style", "k&r"]
+                ]);
+            });
+            
+            format.on("format", function(e) {
+                if (MODES[e.mode])
+                    return formatCode(e.editor, e.mode);
+            });
+            
+            prefs.add({
+                "Formatters" : {
+                    position: 450,
+                    "AStyle" : {
+                        position: 100,
+                        "Style": {
+                            type: "dropdown",
+                            path: "user/format/astyle/@style",
+                            width: "185",
+                            position: 4000,
+                            items: [
+                                { value: "allman", caption: "Allman" },
+                                { value: "banner", caption: "Banner" },
+                                { value: "horstmann", caption: "Horstmann" },
+                                { value: "gnu", caption: "GNU" },
+                                { value: "java", caption: "Java" },
+                                { value: "kr", caption: "K&R" },
+                                { value: "linux", caption: "Linux" },
+                                { value: "lisp", caption: "Lisp" },
+                                { value: "otbs", caption: "One True Brace Style" },
+                                { value: "pico", caption: "Pico" },
+                                { value: "stroustrup", caption: "Stroustrup" },
+                                { value: "whitesmith", caption: "Whitesmith" }
+                            ]
+                        }
+                    }
+                }
+            }, plugin);
+        }
+        
+        /***** Methods *****/
+        
+        function formatCode(editor, mode) {
+            if (this.disabled === true)
+                return;
+    
+            var ace = editor.ace;
+            var sel = ace.selection;
+            var session = ace.session;
+            var range = sel.getRange();
+            var keepSelection = false;
+            
+            if (range.isEmpty() || all) {
+                range = new Range(0, 0, session.getLength(), 0);
+                keepSelection = true;
+            }
+    
+            // Parameters for astyle
+            var as_style = settings.get("user/format/astyle/@style");
+	    if (as_style == "k&r") as_style = "kr";
+            /*var options = {
+                brace_style: settings.get("user/format/astyle/@style"),
+                e4x: true
+            };*/
+            
+            var json = settings.get("user/format/astyle/@advanced");
+            if (json && typeof json == "object")
+                util.extend(options, json);
+    
+	    var as_indent=null;
+            if (session.getUseSoftTabs()) {
+                as_indent = "-s" + session.getTabSize();
+            } else {
+                as_indent = "-t";
+            }
+    
+            var line = session.getLine(range.start.row);
+            var indent = line.match(/^\s*/)[0];
+            var trim = false;
+    
+            if (range.start.column < indent.length)
+                range.start.column = 0;
+            else
+                trim = true;
+    
+            var value = session.getTextRange(range);
+            var as_mode = null;
+    
+            if (mode == "c_cpp") {
+                as_mode = "c";
+            } else if (mode == "java"){
+                as_mode = "java";
+            } else if (mode == "cs") {
+                as_mode = "cs";
+            }
+            
+            try {
+                // FIXME: Use nodejs to execute command, not XMLHttpRequest
+                var xmlhttp = new XMLHttpRequest();
+                var url = "/services/astyle.php";
+                xmlhttp.onreadystatechange = function() {
+                    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
+                        value = xmlhttp.responseText;
+                        console.log("Formatter: astyle");
+                        console.log(xmlhttp);
+                        //alert("Value: "+value);
+                        if (trim)
+                            value = value.replace(/^/gm, indent).trim();
+                        if (range.end.column === 0)
+                            value += "\n" + indent;
+                        if (!value || /^\s*$/.test(value)) {
+                            showError("astyle error");
+                        } else {
+                            var end = session.diffAndReplace(range, value);
+                            if (!keepSelection)
+                                sel.setSelectionRange(Range.fromPoints(range.start, end));
+                        }
+                    } 
+                }
+                xmlhttp.open("POST", url, true);
+                xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
+                xmlhttp.send("mode=" + as_mode + "&style=" + encodeURIComponent(as_style) + "&indent=" + as_indent + "&input=" + encodeURIComponent(value));
+            }
+            catch (e) {
+                return false;
+            }
+    
+            
+            return true;
+        }
+        
+        /***** Lifecycle *****/
+        
+        plugin.on("load", function() {
+            load();
+        });
+        plugin.on("enable", function() {
+            
+        });
+        plugin.on("disable", function() {
+            
+        });
+        plugin.on("unload", function() {
+            loaded = false;
+        });
+        
+        /***** Register and define API *****/
+        
+        /**
+         * Beautify extension for the Cloud9 client
+         *
+         * Reformats the selected code in the current document
+         * Processing/formatting code from https://github.com/einars/js-beautify
+         */
+        plugin.freezePublicAPI({
+            /**
+             * 
+             */
+            formatCode: formatCode
+        });
+        
+        register(null, {
+            "format.astyle": plugin
+        });
+    }
+});
